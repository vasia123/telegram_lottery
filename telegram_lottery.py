
import os
from dblite import aioDbLite
from pyrogram import Client
from pyrogram import filters
from pyrogram.types import (Message)
from pyrogram.methods.utilities.idle import idle
from pyrogram.enums import ChatMemberStatus
from dotenv import load_dotenv

load_dotenv()
API_ID = os.getenv('API_ID')
API_HASH = os.getenv('API_HASH')
BOT_TOKEN = os.getenv('BOT_TOKEN')

text_new_lottery = """–†–æ–∑—ã–≥—Ä—ã—à **"[title]"** –Ω–∞—á–∞–ª—Å—è!

–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ `üé≤` –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ —á–∞—Ç.
–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —ç–º–æ–¥–∑–∏ –Ω–∞–ø–∏—Å–∞–≤ –≤ –ø—É—Å—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ `dice` –∏–ª–∏ `–∫—É–±–∏–∫`, –≤ –ø–æ—è–≤–∏–≤—à–µ–π—Å—è –ø–æ–¥—Å–∫–∞–∑–∫–µ –≤—ã–±—Ä–∞—Ç—å —ç–º–æ–¥–∑–∏ –∫—É–±–∏–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç —ç–º–æ–¥–∑–∏ –≤ —á–∞—Ç.

–†–æ–∑—ã–≥—Ä—ã—à –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤ —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Å–∞–º—ã–º–∏ –≤—ã—Å–æ–∫–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏, –ø–æ–∫–∞ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –æ–¥–∏–Ω –ø–æ–±–µ–¥–∏—Ç–µ–ª—å.

–í –∫–∞–∂–¥–æ–º —Ä–∞—É–Ω–¥–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫—É–±–∏–∫.

__–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∫—É–±–∏–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞, —ç—Ç–∏–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —á–µ—Å—Ç–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.__
__–ö–æ–¥ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ: __


–¢–µ–∫—É—â–∏–π —Ä–∞—É–Ω–¥: **[round]**
–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–∞—É–Ω–¥–∞: [participants]
"""

class LotteryBot:
    aiodb: aioDbLite = None
    app: Client = None
        
    async def connect(self):
        """Connect to the database."""
        self.aiodb = await aioDbLite('tgbot.db')
        await self.aiodb.create(
            'lotteries', 
            id='INTEGER PRIMARY KEY AUTOINCREMENT',
            chat_id='int',
            message_id='int',
            title='TEXT NOT NULL',
            status='int(1)',
            dateCreated='timestamp',
            round='int'
        )
        await self.aiodb.create(
            'participants', 
            user_id='int',
            lottery_id='int',
            tiket='int',
            round='int',
        )
        await self.app.start()
        await idle()
        await self.app.stop()
        await self.aiodb.close()

    def startBot(self):

        self.app = Client(
            "lottery_bot",
            api_id=API_ID, api_hash=API_HASH,
            bot_token=BOT_TOKEN
        )
        # start lottery
        @self.app.on_message(filters.command(["startlottery"]))
        async def startlottery(client: Client, message: Message):
            print(message)
            lottery_title = message.command
            lottery_title.pop(0)
            lottery_title = ' '.join(lottery_title)
            if len(lottery_title) == 0:
                await message.reply('–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º!')
            else:
                user_chat_data = await client.get_chat_member(
                    chat_id=message.chat.id,
                    user_id=message.from_user.id
                )
                print(user_chat_data)
                print(user_chat_data.status)
                if user_chat_data.status == ChatMemberStatus.ADMINISTRATOR or user_chat_data.status == ChatMemberStatus.OWNER:
                    await message.reply(
                        text_new_lottery
                            .replace('[title]', lottery_title)
                            .replace('[round]', 1)
                            .replace('[participants]', "–ø–æ–∫–∞ –Ω–µ—Ç")
                    )
                    
                    # print(await aiodb.data('users'))
                    # await aiodb.add('users', id=1, name='Jhon', age=32, pos='Developer')
                    # await aiodb.add('users', id=2, name='Doe', age=30, pos='Manager')
                    # await aiodb.add('users', id=3, name='Rio', age=29, pos='Marketing')
                    # print(await aiodb.data('users'))
                    # await aiodb.remove('users', id=3)
                    # print(await aiodb.data('users'))
                    # await aiodb.update('users', age=31, pos='CEO', id=1)
                    # print(await aiodb.data('users'))
                    # print(await aiodb.select('users', '*', id=1))
                else:
                    await message.reply('–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –ª–æ—Ç–µ—Ä–µ—é.')

        # stop lottery
        @self.app.on_message(filters.command(["stoplottery"]))
        async def stoplottery(client: Client, message: Message):
            # message.chat.id
            await message.reply('–†–æ–∑—ã–≥—Ä—ã—à –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')

        # next round
        @self.app.on_message(filters.command(["nextround"]))
        async def nextround(client: Client, message: Message):
            await message.reply('–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥.')
            # await message.reply('–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥.')

        @self.app.on_message(filters.dice)
        async def dice(client: Client, message: Message):
            print(message)
            await message.reply(message.dice.value)

        self.app.run(self.connect())

bot = LotteryBot()
bot.startBot()
